apply plugin: 'signing'

version '0.1.0-alpha1'
archivesBaseName = 'tabitha'

allprojects {
    apply plugin: 'groovy'
    apply plugin: 'java'
    apply plugin: 'maven'

    group 'com.widen.oss'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }
        test {
            groovy {
                srcDirs = ['src/test/groovy']
            }
        }
    }
}

ext.isReleaseVersion = !version.endsWith('SNAPSHOT')
ext.username = hasProperty('ossrhUsername') ? ossrhUsername : System.getenv('OSSRH_USERNAME')
ext.password = hasProperty('ossrhPassword') ? ossrhPassword : System.getenv('OSSRH_PASSWORD')

dependencies {
    compile 'com.opencsv:opencsv:3.8'
    compile 'commons-collections:commons-collections:3.2.1'
    compile 'commons-io:commons-io:2.5'
    compile 'org.apache.poi:poi:3.15'
    compile 'org.apache.poi:poi-ooxml:3.15'
    compile 'org.apache.poi:ooxml-schemas:1.3'

    testCompile 'org.codehaus.groovy:groovy-all:2.4.1'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'cglib:cglib-nodep:3.2.5'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
    required {
        isReleaseVersion && gradle.taskGraph.hasTask('uploadArchives')
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                authentication(userName: username, password: password)
            }

            snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
                authentication(userName: username, password: password)
            }

            pom.project {
                name 'Tabitha'
                packaging 'jar'
                description 'Tabular data reading, writing, and processing library'
                url 'https://github.com/Widen/tabitha'
                scm {
                    url 'https://github.com/Widen/tabitha'
                    connection 'scm:git@github.com:Widen/tabitha.git'
                    developerConnection 'scm:git@github.com:Widen/tabitha.git'
                }
                licenses {
                    license {
                        name 'The MIT License'
                        url 'https://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }
                developers {
                    developer {
                        id 'scoakley'
                        name 'Stephen Coakley'
                        email 'scoakley@widen.com'
                    }
                }
            }
        }
    }
}
